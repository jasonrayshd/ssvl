import os
import csv
import argparse


def parser_terminal_args():

    parser = argparse.ArgumentParser()

    parser.add_argument("--logfile", type=str, default="extract_flow.data", 
                                help="path to log file that records flow extraction progress")
    parser.add_argument("--anno_path", type=str, default="/data/shared/ssvl/ego4d/v1/annotations/new_egoclip.csv", 
                                help="path to new egoclip annotation file generated by video2clip.py")

    return parser.parse_args()




def main(args):

    processed_clips = []
    return_arr = []
    # read log file
    with open(args.logfile, "r") as fp:
        for line in fp.readlines():
            if line == "\n":
                continue
            
            meta = line.strip("\n").split(",")

            if len(meta) != 2:
                continue

            clip_id, state = meta
            if state == "success":
                processed_clips.append(clip_id)

    return_arr.append(str(len(processed_clips)))
    todo_clips = []
    # read annotation file
    with open(args.anno_path, "r") as fp:
        reader = csv.reader(fp)
        for line in reader:
            if line == "\n":
                continue
            # print(line)
            clip_id = line[0].strip("\n").split("\t")[-4]
            if clip_id in processed_clips:
                continue 
            todo_clips.append(clip_id)

    return_arr.extend(todo_clips)
    # print clip ids to be processed
    # print(f"processed clips:{len(processed_clips)}")
    
    print(" ".join(return_arr))



if __name__ == "__main__":

    args = parser_terminal_args()
    main(args)

